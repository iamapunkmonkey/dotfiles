set nocompatible

execute pathogen#helptags()
execute pathogen#infect()

let mapleader=","

nmap <silent> <leader>ev :e $MYVIMRC<CR>
nmap <silent> <leader>sv :so $MYVIMRC<CR>

set hidden

set nowrap
set tabstop=4
set backspace=indent,eol,start

set autoindent
set copyindent
set number
set shiftwidth=4
set shiftround
set showmatch
set ignorecase
set smartcase
set smarttab
set hlsearch
set incsearch

set history=1000
set undolevels=1000
set wildignore=*.swp,*.bak,*.pyc,*.class

set title
set visualbell
set noerrorbells

set nobackup
set noswapfile

filetype plugin on
filetype plugin indent on

set runtimepath^=~/.vim/bundle/ctrlp.vim

if has('autocmd')
	autocmd filetype python set expandtab
end

if &t_Co >= 256 || has("gui_running")
	colorscheme dracula
endif


if &t_Co > 2 || has("gui_running")
	" switch syntax highlighting on, when the terminal has colors
	syntax on
endif

"set list
"set listchars=tab:>.,trail:.,extends:#,nbsp:.

autocmd filetype html,xml set listchars-=tab:>.

set pastetoggle=<F2>

set mouse=a

fun! s:ToggleMouse()
	if !exists("s:old_mouse")
		let s:old_mouse = "a"
	endif

	if &mouse == ""
		let &mouse = s:old_mouse
		echo "Mouse is for VIM (" . &mouse . ")"
	else
		let s:old_mouse = &mouse
		let &mouse=""
		echo "Mouse is for terminal"
	endif
endfunction

nnoremap ; :

vmap Q gp
vmap Q gqap

nnoremap j gj
nnoremap k gk


autocmd StdinReadPre * let s:std_in=1
autocmd VimEnter * if argc() == 0 && !exists("s:std_in") | NERDTree | endif

map <C-n> :NERDTreeToggle<CR>
